{"version":3,"sources":["components/Header/index.js","components/EmployeeTable/index.js","components/Navbar/index.js","utils/API.js","components/DataContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","EmployeeTable","props","scope","data-field","data-sortable","onClick","sortBy","state","employees","map","employee","name","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","phone","email","login","uuid","Navbar","onSubmit","handleFormSubmit","htmlFor","value","onChange","handleInputChange","list","type","placeholder","axios","get","DataContainer","search","sortDirections","initialSortDirections","results","error","event","target","setState","filterEmployees","toLowerCase","trim","console","log","preventDefault","key","primary","secondary","sortedEmployees","sort","a","b","localeCompare","input","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","API","then","res","data","catch","err","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0095291a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header () {\n    return (\n    <div className=\"header\">\n        <h1>Employee Directory</h1>\n        <p>Click on name column header to sort list by name.</p>\n    </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nconst EmployeeTable = (props) => {\n  return (\n    <table className=\"table table-striped table-sortable text-center\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Image</th>\n          <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n              Name\n            </span>\n          </th>\n          <th scope=\"col\">\n            <span>Phone</span>\n          </th>\n          <th scope=\"col\">\n            <span>Email</span>\n          </th>\n          <th scope=\"col\">\n            <span >DOB</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.state.employees.map((employee) => {\n          const { first, last } = employee.name;\n          const fullName = `${first} ${last}`;\n\n          const dob = props.formatDate(employee.dob.date);\n\n          return (\n            <tr key={employee.login.uuid}>\n              <td>\n                <img src={employee.picture.thumbnail} alt={fullName} />\n              </td>\n              <td className=\"align-middle\">{fullName}</td>\n              <td className=\"align-middle\"><a>{employee.phone}</a></td>\n              <td className=\"align-middle email\"><a>{employee.email}</a></td>\n              <td className=\"align-middle\">{dob}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default EmployeeTable;","import React from \"react\";\nimport EmployeeTable from \"../EmployeeTable\";\n\n\n\nconst Navbar = (props) => {\n    return (\n        <nav className=\"navbar navbar-light bg-light justify-content-center\">\n            <form className=\"search\" onSubmit={props.handleFormSubmit}>\n                <div >\n                    <label htmlFor=\"employee\">Name Search:</label>\n                    <input\n                        className=\"form-group\"\n                        value={props.value}\n                        onChange={props.handleInputChange}\n                        name=\"search\"\n                        list=\"employees\"\n                        type=\"search\"\n                        placeholder=\"Type name here\"\n                        \n                    />\n                    <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">Search</button>\n                </div>\n            </form>\n        </nav>\n    )\n}\n\nexport default Navbar;","import axios from \"axios\";\n\nexport default { \n    getUsers:function(){\n        return axios.get(\"https://randomuser.me/api/?results=25&nat=us\");\n    },\n}","import React, { Component } from 'react';\nimport API from '../../utils/API';\nimport EmployeeTable from '../EmployeeTable/index';\nimport './DataContainer.css';\nimport Navbar from '../Navbar/index';\n\nclass DataContainer extends Component {\n   \n    state = {\n        search: \"\",\n        employees: [],\n        sortDirections: this.initialSortDirections,\n        results: [],\n        error: \"\"\n    };\n\n    get initialSortDirections() {\n        return {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            dob: \"\",\n        };\n    }\n\n    componentDidMount() {\n        API.getUsers()\n            .then((res) =>\n                this.setState({\n                    employees: res.data.results,\n                }),\n            )\n            .catch((err) => console.log(err));\n    }\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        this.setState({ search: value });\n        this.filterEmployees(value.toLowerCase().trim());\n    };\n\n\n    handleFormSubmit = (event) => {\n        console.log(\"You've hot the handleFormSubmit function\")\n        event.preventDefault();\n\n    };\n\n\n    sortBy = (key, primary, secondary) => {\n        let sortedEmployees = this.state.employees;\n         {\n            sortedEmployees = this.state.employees.sort((a, b) => {\n                a = a[key];\n                b = b[key];\n\n\n                if (primary) {\n                    if (secondary && a[primary] === b[primary]) {\n                        return a[secondary].localeCompare(b[secondary]);\n                    }\n                    return a[primary].localeCompare(b[primary]);\n                } else {\n                    return a.localeCompare(b);\n                }\n            });\n\n            this.setState({\n                employees: sortedEmployees,\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: \"asc\",\n                },\n            });\n        }\n    };\n\n    filterEmployees = (input) => {\n        if (input) {\n            this.setState({\n                employees: this.state.employees.filter((employee) => {\n                    return (\n                        employee.name.first\n                            .toLowerCase()\n                            .concat(\" \", employee.name.last.toLowerCase())\n                            .includes(input) ||\n                        employee.phone.includes(input) ||\n                        employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\n                        employee.email.includes(input) ||\n                        this.formatDate(employee.dob.date).includes(input)\n                    );\n                }),\n            });\n        } else {\n            this.setState({ employees: this.state.employees });\n        }\n    };\n\n    formatDate = (date) => {\n        date = new Date(date);\n        let dob = [];\n        dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n        dob.push((\"0\" + date.getDate()).slice(-2));\n        dob.push(date.getFullYear());\n\n        // Join formatted date\n        return dob.join(\"-\");\n    };\n\n    render() {\n        return (\n            \n            <Navbar \n            value={this.state.search}\n            handleInputChange={this.handleInputChange}\n            handleFormSubmit={this.handleFormSubmit}\n            />,\n            <div className=\" containerBackground container mt-4\">\n\n            <EmployeeTable\n                state={this.state}\n                sortBy={this.sortBy}\n                filterEmployees={this.filterEmployees}\n                formatDate={this.formatDate}\n            />\n            </div >\n\n        );\n    }\n}\n\nexport default DataContainer","import './App.css';\nimport Header from './components/Header/index';\nimport Navbar from './components/Navbar/index';\nimport DataContainer from './components/DataContainer/index';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Navbar />\n      <DataContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}